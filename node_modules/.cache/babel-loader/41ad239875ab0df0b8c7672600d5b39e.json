{"ast":null,"code":"var _jsxFileName = \"/home/mickael/Documents/HOPS/hops-website/src/index.js\";\nimport * as serviceWorker from './serviceWorker';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport i18n from \"i18next\";\nimport { useTranslation, initReactI18next } from \"react-i18next\";\ni18n.use(initReactI18next) // passes i18n down to react-i18next\n.init({\n  resources: {\n    en: {\n      translation: {\n        \"Welcome to React\": \"Welcome to React and react-i18next\"\n      }\n    }\n  },\n  lng: \"en\",\n  fallbackLng: \"en\",\n  interpolation: {\n    escapeValue: false\n  }\n});\n\nfunction App() {\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  }, t('Welcome to React'));\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/mickael/Documents/HOPS/hops-website/src/index.js"],"names":["serviceWorker","React","ReactDOM","i18n","useTranslation","initReactI18next","use","init","resources","en","translation","lng","fallbackLng","interpolation","escapeValue","App","t","render","document","getElementById","unregister"],"mappings":";AAAA,OAAO,KAAKA,aAAZ,MAA+B,iBAA/B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,eAAjD;AAEAF,IAAI,CACDG,GADH,CACOD,gBADP,EACyB;AADzB,CAEGE,IAFH,CAEQ;AACJC,EAAAA,SAAS,EAAE;AACTC,IAAAA,EAAE,EAAE;AACFC,MAAAA,WAAW,EAAE;AACX,4BAAoB;AADT;AADX;AADK,GADP;AAQJC,EAAAA,GAAG,EAAE,IARD;AASJC,EAAAA,WAAW,EAAE,IATT;AAUJC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE;AADA;AAVX,CAFR;;AAkBA,SAASC,GAAT,GAAe;AACb,QAAM;AAAEC,IAAAA;AAAF,MAAQZ,cAAc,EAA5B;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKY,CAAC,CAAC,kBAAD,CAAN,CAAP;AACD;;AAGDd,QAAQ,CAACe,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAnB,aAAa,CAACoB,UAAd","sourcesContent":["import * as serviceWorker from './serviceWorker';\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport i18n from \"i18next\";\nimport { useTranslation, initReactI18next } from \"react-i18next\";\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources: {\n      en: {\n        translation: {\n          \"Welcome to React\": \"Welcome to React and react-i18next\"\n        }\n      }\n    },\n    lng: \"en\",\n    fallbackLng: \"en\",\n    interpolation: {\n      escapeValue: false\n    }\n  });\n\n\nfunction App() {\n  const { t } = useTranslation();\n  return <h2>{t('Welcome to React')}</h2>;\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}